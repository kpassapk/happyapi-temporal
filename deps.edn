{:paths ["src" "resources" "target/resources"]
 :deps {com.biffweb/biff                    #:git{:url "https://github.com/jacobobryant/biff", :sha "75fd9d7", :tag "v1.8.20"}
        camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.3"}
        metosin/muuntaja                    {:mvn/version "0.6.8"}
        ring/ring-defaults                  {:mvn/version "0.3.4"}
        org.clojure/clojure                 {:mvn/version "1.11.1"}

        ;; Notes on logging: https://gist.github.com/jacobobryant/76b7a08a07d5ef2cc076b048d078f1f3
        org.slf4j/slf4j-simple     {:mvn/version "2.0.0-alpha5"}
        org.slf4j/log4j-over-slf4j {:mvn/version "1.7.36"}
        org.slf4j/jul-to-slf4j     {:mvn/version "1.7.36"}
        org.slf4j/jcl-over-slf4j   {:mvn/version "1.7.36"}

        io.github.timothypratley/happyapi {:local/root "/Users/kyle/src/github.com/unifica-ai/happyapi"
                                           ;; :mvn/version "0.1.110-alpha"
                                           }

        ai.unifica/temporal {;; :git/url "git@github.com-unifica-components:unifica-ai/components.git" :git/sha "bd9b90fc297ffefcdb84e8f89065048383fe390f"
                             ;; :deps/root "temporal"
                             :local/root "/Users/kyle/src/github.com/unifica-ai/components/temporal"
                             }

        clojure.java-time/clojure.java-time {:mvn/version "1.4.2"}
        }
 :aliases
 {:dev {:extra-deps {com.biffweb/tasks {:git/url "https://github.com/jacobobryant/biff", :git/sha "75fd9d7", :git/tag "v1.8.20", :deps/root "libs/tasks"}
                     vvvvalvalval/scope-capture {:mvn/version "0.3.3"}}
        :extra-paths ["dev" "test"]
        :jvm-opts ["-XX:-OmitStackTraceInFastThrow"
                   "-XX:+CrashOnOutOfMemoryError"
                   "-Dbiff.env.BIFF_PROFILE=dev"]
        :main-opts ["-m" "com.biffweb.task-runner" "tasks/tasks"]}
  :prod {:jvm-opts ["-XX:-OmitStackTraceInFastThrow"
                    "-XX:+CrashOnOutOfMemoryError"
                    "-Dbiff.env.BIFF_PROFILE=prod"]
         :main-opts ["-m" "happyapi.temporal"]}}}
